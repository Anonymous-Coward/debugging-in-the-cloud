plugins {
	id 'java'
	id("application")
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id("org.openapi.generator") version "7.2.0"
}

group = 'demo.debugging'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation group: "org.openapitools", name: "jackson-databind-nullable", version: "0.2.6"
	implementation group: "org.springdoc", name: "springdoc-openapi-starter-webmvc-ui", version: "2.0.2"
	
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	
	developmentOnly("org.springframework.boot:spring-boot-devtools")	
}

apply plugin: "org.openapi.generator"

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/../api/name-builder-api.json"
    outputDir = "$buildDir/generated/openapi"
    apiPackage = "demo.debugging.namebuilder.api"
    modelPackage = "demo.debugging.namebuilder.model"
    configOptions = [
            "interfaceOnly": "true",
            "generateApis": "true",
            "generateApiTests": "false",
            "library": "spring-boot",
            "serializableModel": "true",
            "useSpringBoot3": "true",
            "useSpringController": "true",
            "useBeanValidation": "true",
            "useTags": "false"
    ]
}

def openApiClientData = [
	numberPairs: [
		spec: "$projectDir/../api/number-pair-api.json",
		pkg: "demo.debugging.numberpair",
		dir: "numberpair",
		classPrefix: "Numbers"
	],
	words: [
		spec: "$projectDir/../api/word-dispenser-api.json",
		pkg: "demo.debugging.worddispenser",
		dir: "worddispenser",
		classPrefix: "Words"
	]
]

import org.openapitools.generator.gradle.plugin.tasks.GenerateTask
openApiClientData.each((_, cfg) ->
    tasks.register("openApiGenerate_client_$cfg.dir", GenerateTask) {
        apiPackage.set(cfg.pkg + ".api")
        generateApiTests.set(false)
        generateModelTests.set(false)
        generatorName.set("java")
        inputSpec.set("$cfg.spec")
        invokerPackage.set("org.openapitools.client")
        library.set("resttemplate")
        modelPackage.set(cfg.pkg + ".model")
        outputDir.set("$buildDir/generated/outdated")
        inputs.files(fileTree(cfg.spec)).withPathSensitivity(PathSensitivity.RELATIVE)
        skipValidateSpec.set(true)
        additionalProperties.set([
        	apiNamePrefix: cfg.classPrefix
        ])
    }
)

// java resttemplate generator generates outdated annotations
task updateClientSources(type: Copy) {
		from tasks.openApiGenerate_client_numberpair, tasks.openApiGenerate_client_worddispenser
		into "$buildDir/generated/openapi"
		filter {
			String line -> {
				line.replaceAll("@javax.annotation", "@jakarta.annotation")
			}
		}
}

sourceSets {
    main {
        java {
            srcDirs("$buildDir/generated/openapi/src/main/java")
        }
    }
}

tasks.withType(JavaCompile) {
    dependsOn(tasks.openApiGenerate)
    dependsOn(tasks.updateClientSources)
}

tasks.named('test') {
	useJUnitPlatform()
}
